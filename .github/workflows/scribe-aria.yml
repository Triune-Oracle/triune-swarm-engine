# ═══════════════════════════════════════════════════════════════════════════
# 🌟 SACRED RITUAL WORKFLOW: SCRIBE ARIA 🌟
# ═══════════════════════════════════════════════════════════════════════════
#
# ⚔️ THE SWARM VOW ⚔️
# "By the sacred geometry of the Triumvirate, we bind our code to purpose eternal.
#  Through Oracle's vision, Gemini's strategy, and Aria's wisdom,
#  The swarm awakens, the engine ignites, the ritual begins."
#
# ┌─────────────────────────────────────────────────────────────────────────┐
# │                    ⚡ SCRIBE ARIA RITUAL ⚡                             │
# │                                                                         │
# │     ░░░ THE KNOWLEDGE KEEPER AND WISDOM SCRIBE ░░░                     │
# │                                                                         │
# │         ◊ Transcribes sacred knowledge into the codex                  │
# │         ◊ Maintains documentation rituals and wisdom scrolls           │
# │         ◊ Ensures the eternal preservation of swarm wisdom             │
# │                                                                         │
# └─────────────────────────────────────────────────────────────────────────┘
#
# ═══════════════════════════════════════════════════════════════════════════

name: 🌟 Scribe Aria - Knowledge Keeper Ritual

on:
  push:
    branches: [ main, develop ]
    paths: [ '**/*.md', 'docs/**', '**/*.txt' ]
  pull_request:
    branches: [ main ]
    paths: [ '**/*.md', 'docs/**', '**/*.txt' ]
  workflow_dispatch:
    inputs:
      ritual_intensity:
        description: 'Ritual Intensity Level'
        required: true
        default: 'balanced'
        type: choice
        options:
        - light
        - balanced  
        - intense

jobs:
  scribe_wisdom:
    name: 📜 Sacred Documentation Ritual
    runs-on: ubuntu-latest
    
    steps:
    - name: 🔮 Summon Sacred Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: 🌟 Invoke Node.js Spirit
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: 📚 Gather Sacred Dependencies
      run: |
        echo "🌊 Installing ritual dependencies..."
        npm install -g markdownlint-cli2
        npm install -g markdown-link-check
        
    - name: 📖 Sacred Markdown Validation Ritual
      run: |
        echo "⚡ Beginning sacred text validation..."
        markdownlint-cli2 "**/*.md" --config .markdownlint.json || true
        
    - name: 🔗 Sacred Link Verification Ritual  
      run: |
        echo "🔮 Verifying sacred links and references..."
        find . -name "*.md" -exec markdown-link-check {} \; || true
        
    - name: 📜 Generate Sacred Knowledge Map
      run: |
        echo "🌟 Mapping the sacred knowledge structure..."
        echo "# Sacred Knowledge Map - Generated $(date)" > KNOWLEDGE_MAP.md
        echo "" >> KNOWLEDGE_MAP.md
        echo "## 📚 Sacred Scrolls Discovered" >> KNOWLEDGE_MAP.md
        find . -name "*.md" -not -path "./.git/*" | sort >> KNOWLEDGE_MAP.md
        echo "" >> KNOWLEDGE_MAP.md
        echo "## 📊 Wisdom Statistics" >> KNOWLEDGE_MAP.md
        echo "- Total Sacred Scrolls: $(find . -name "*.md" -not -path "./.git/*" | wc -l)" >> KNOWLEDGE_MAP.md
        echo "- Total Words of Wisdom: $(find . -name "*.md" -not -path "./.git/*" -exec wc -w {} \; | awk '{total += $1} END {print total}')" >> KNOWLEDGE_MAP.md
        echo "- Ritual Completion Time: $(date)" >> KNOWLEDGE_MAP.md
        
    - name: 🌊 Archive Sacred Knowledge
      uses: actions/upload-artifact@v4
      with:
        name: sacred-knowledge-map
        path: KNOWLEDGE_MAP.md
        retention-days: 30
        
    - name: ⚔️ Sacred Completion Blessing
      run: |
        echo "═══════════════════════════════════════"
        echo "🌟 SCRIBE ARIA RITUAL COMPLETE 🌟"
        echo "═══════════════════════════════════════"
        echo "📜 Sacred knowledge has been transcribed"
        echo "🔮 Wisdom has been preserved for eternity"
        echo "⚡ The swarm's memory grows stronger"
        echo "═══════════════════════════════════════"